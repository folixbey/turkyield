-- Anti-cheat bypass
assert(getrawmetatable)
grm = getrawmetatable(game)
setreadonly(grm, false)
old = grm.__namecall
grm.__namecall = newcclosure(function(self, ...)
    local args = {...}
    if tostring(args[1]) == "TeleportDetect" then
        return
    elseif tostring(args[1]) == "CHECKER_1" then
        return
    elseif tostring(args[1]) == "CHECKER" then
        return
    elseif tostring(args[1]) == "GUI_CHECK" then
        return
    elseif tostring(args[1]) == "OneMoreTime" then
        return
    elseif tostring(args[1]) == "checkingSPEED" then
        return
    elseif tostring(args[1]) == "BANREMOTE" then
        return
    elseif tostring(args[1]) == "PERMAIDBAN" then
        return
    elseif tostring(args[1]) == "KICKREMOTE" then
        return
    elseif tostring(args[1]) == "BR_KICKPC" then
        return
    elseif tostring(args[1]) == "BR_KICKMOBILE" then
        return
    end
    return old(self, ...)
end)

local OriginalKeyUpValue = 0
local Cooldown = false

function AddVelocity(Vel, Char)
	Char.HumanoidRootPart.Velocity = Char.HumanoidRootPart.Velocity + Vel
end

local Grapple = Instance.new('Animation')
Grapple.AnimationId = 'rbxassetid://3135389157'

local Swing = Instance.new('Animation')
Swing.AnimationId = 'rbxassetid://3135793091'

local GlideAnim = Instance.new("Animation")
GlideAnim.AnimationId = 'rbxassetid://3084858603'

function StopAudio()
	game:GetService('Players').LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('BOOMBOXSOUND'):Stop()
end

function Stop(i, v)
	local w = coroutine.wrap(function()
		wait(game:GetService('Players').LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('BOOMBOXSOUND').TimeLength - 0.1)
		if game:GetService('Players').LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('BOOMBOXSOUND').SoundId == 'rbxassetid://' .. i and OriginalKeyUpValue == v then
			StopAudio()
		end
	end)
	w()
end

function Play(i, v, w)
	if game:GetService('Players').LocalPlayer:FindFirstChildOfClass('Backpack'):FindFirstChild('[Boombox]') then
		local Tool = nil
		if game:GetService('Players').LocalPlayer.Character:FindFirstChildOfClass('Tool') and w == true then
			Tool = game:GetService('Players').LocalPlayer.Character:FindFirstChildOfClass('Tool')
			game:GetService('Players').LocalPlayer.Character:FindFirstChildOfClass('Tool').Parent = game:GetService('Players').LocalPlayer:FindFirstChildOfClass('Backpack')
		end
		game:GetService('Players').LocalPlayer:FindFirstChildOfClass('Backpack'):FindFirstChild('[Boombox]').Parent = game:GetService('Players').LocalPlayer.Character
		game:GetService('ReplicatedStorage'):FindFirstChild('MainEvent'):FireServer('Boombox', i)
		game:GetService('Players').LocalPlayer.Character:FindFirstChild('[Boombox]').RequiresHandle = false
		if game:GetService('Players').LocalPlayer.Character:FindFirstChild('[Boombox]'):FindFirstChild('Handle') then
			game:GetService('Players').LocalPlayer.Character:FindFirstChild('[Boombox]'):FindFirstChild('Handle'):Destroy()
		end
		game:GetService('Players').LocalPlayer.Character:FindFirstChild('[Boombox]').Parent = game:GetService('Players').LocalPlayer:FindFirstChildOfClass('Backpack')
		if game:GetService('Players').LocalPlayer:FindFirstChildOfClass('PlayerGui'):FindFirstChild('MainScreenGui'):FindFirstChild('BoomboxFrame') then
			game:GetService('Players').LocalPlayer:FindFirstChildOfClass('PlayerGui'):FindFirstChild('MainScreenGui'):FindFirstChild('BoomboxFrame').Visible = false
		end
		if Tool ~= true then
			if Tool then
				Tool.Parent = game:GetService('Players').LocalPlayer.Character
			end
		end
		if v == true then
			game:GetService('Players').LocalPlayer.Character:FindFirstChild('LowerTorso'):WaitForChild('BOOMBOXSOUND')
			local x = coroutine.wrap(function()
				repeat wait() until game:GetService('Players').LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('BOOMBOXSOUND').SoundId == 'rbxassetid://' .. i and game:GetService('Players').LocalPlayer.Character:FindFirstChild('LowerTorso'):FindFirstChild('BOOMBOXSOUND').TimeLength > 0.01
				OriginalKeyUpValue = OriginalKeyUpValue + 1
				Stop(i, OriginalKeyUpValue)
			end)
			x()
		end
	end
end

local GlideTool = Instance.new('Tool')
GlideTool.Parent = game.Players.LocalPlayer.Backpack
GlideTool.Name = "Glide"
GlideTool.RequiresHandle = false

function GlideToolActive()
	local player = game.Players.LocalPlayer
	repeat wait() until player.Character
	local humanoid = player.Character:WaitForChild('Humanoid')
	local bodyvelocity = Instance.new("BodyVelocity")
	bodyvelocity.Parent = GlideTool.Handle
	bodyvelocity.MaxForce = Vector3.new(0, 0, 0)
	local jumpover = true

	function jump()
		jumpover = false
		wait(.3)
		jumpover = true
		local currenstate = humanoid:GetState()
		if currenstate == Enum.HumanoidStateType.Freefall and player.Character:FindFirstChild("Glide") then
			bodyvelocity.MaxForce = Vector3.new(0, 100000, 0)
			while wait() and player.Character:FindFirstChild("Glide") and humanoid:GetState() == Enum.HumanoidStateType.Freefall do
				humanoid:LoadAnimation(GlideAnim):Play()
			end
		end
	end

	humanoid.StateChanged:Connect(function(oldState, newState)
		if jumpover == true then
			if newState == Enum.HumanoidStateType.Jumping then
				bodyvelocity.MaxForce = Vector3.new(0, 0, 0)
				jump()
			elseif newState == Enum.HumanoidStateType.Freefall then
				bodyvelocity.MaxForce = Vector3.new(0, 300000, 0)
				while wait() and player.Character:FindFirstChild("Glide") and humanoid:GetState() == Enum.HumanoidStateType.Freefall do
					humanoid:LoadAnimation(GlideAnim):Play()
				end
			else
				humanoid:LoadAnimation(GlideAnim):Stop()
				if player.Character:FindFirstChild("Glide") then
					humanoid:LoadAnimation(GlideAnim):Stop()
				end
				bodyvelocity.MaxForce = Vector3.new(0, 0, 0)
			end
		end
	end)
end

GlideTool.Equipped:Connect(GlideToolActive)

-- Swing Tool integration
function SwingTool()
	local Tool = Instance.new('Tool')
	Tool.Name = 'Swing'
	Tool.RequiresHandle = false
	Tool.Activated:Connect(function()
		if game:GetService('Players').LocalPlayer:GetMouse().Target and Cooldown == false then
			Cooldown = true
			game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid'):LoadAnimation(Grapple):Play()
			Play(151733071, true, true)
			wait(0.25)
			local Rotation = game:GetService('Players').LocalPlayer.Character:FindFirstChild('HumanoidRootPart').CFrame - game:GetService('Players').LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Position
			local Tween = game:GetService('TweenService'):Create(game:GetService('Players').LocalPlayer.Character:FindFirstChild('HumanoidRootPart'), TweenInfo.new(.99, Enum.EasingStyle.Linear), {CFrame = CFrame.new(game:GetService('Players').LocalPlayer:GetMouse().Hit.X, game:GetService('Players').LocalPlayer:GetMouse().Hit.Y + 5, game:GetService('Players').LocalPlayer:GetMouse().Hit.Z) * Rotation})
			Tween:Play()
			game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid'):LoadAnimation(Swing):Play()
			Tween.Completed:Wait()
			for _, v in pairs(game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid'):GetPlayingAnimationTracks()) do
				if v.Animation.AnimationId == Swing.AnimationId then
					v:Stop()
					wait(0.01)
					game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid'):LoadAnimation(GlideAnim):Play()
				    wait(.1)
				end
			end
			Cooldown = false
		end
	end)
	Tool.Parent = game:GetService('Players').LocalPlayer.Backpack
end

SwingTool()

-- Update UI settings
_G.Settings = {
    ["Energy Bar"] = {
        ["Text"]    = "BATMAN ENERGY",
        ["Color"]   = Color3.fromRGB(152,136,41)
    },
    ["Armor Bar"] = {
        ["Text"]    = "BATMAN SHIELD",
        ["Color"]   = Color3.fromRGB(109,195,229)
    },
    ["HP Bar"] = {
        ["Text"]    = "BATMAN HEALTH",
        ["Color"]   = Color3.fromRGB(40,46,60)
    }
}

local UpdateUI = function()
    local Bars = game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("MainScreenGui"):WaitForChild("Bar")
    Bars["Armor"]["bar"]["BackgroundColor3"]                            = _G.Settings["Armor Bar"]["Color"]
    Bars["Armor"]:FindFirstChildWhichIsA("TextLabel").Text              = _G.Settings["Armor Bar"]["Text"]
    Bars["Armor"]:FindFirstChildWhichIsA("TextLabel").TextXAlignment    = "Center"

    Bars["Energy"]["bar"]["BackgroundColor3"]                           = _G.Settings["Energy Bar"]["Color"]
    Bars["Energy"]:FindFirstChildWhichIsA("TextLabel").Text             = _G.Settings["Energy Bar"]["Text"]
    Bars["Energy"]:FindFirstChildWhichIsA("TextLabel").TextXAlignment   = "Center"

    Bars["HP"]["bar"]["BackgroundColor3"]                               = _G.Settings["HP Bar"]["Color"]
    Bars["HP"]:FindFirstChildWhichIsA("TextLabel").Text                 = _G.Settings["HP Bar"]["Text"]
end

UpdateUI()
game.Players.LocalPlayer.CharacterAdded:Connect(UpdateUI)
